#!/bin/bash

# Requires: SynthLib2Tester and $SEMANTIC_SOLVER in path

SEMANTIC_CHECK_TIMEOUT=10

SEMANTIC_SOLVER=z3-4.8.4
SEMANTIC_SOLVER_OPTS=""

#SEMANTIC_SOLVER=cvc4
#SEMANTIC_SOLVER_OPTS="--lang=smt2"

SOLVEROUT=$1
SYGUSBENCHNAME=$2



clean_starexec_out $SOLVEROUT > $SOLVEROUT-out.tmp

# $SOLVEROUT is solver output
# $SYGUSBENCHNAME is the sygus benchmark the solver output is for

# Ensure that files exist
if [ ! -f "$SOLVEROUT" ];
then
  echo "ERROR (could not find solver output file)"
  exit 1
fi
if [ ! -f "$SYGUSBENCHNAME" ];
then
  echo "ERROR (could not find reference sygus file)"
  exit 1
fi

# for simple debugging
#echo "FILE-OK"
#exit 1;


SIZE="n/a"

# did the solver produce a solution?
if grep -q define-fun $SOLVEROUT;
then
  # for simple debugging
  #echo "SOLVED"
  #exit 1;

  # Run the SynthLib2Tester tool to check grammar
  #echo "[debug] Run SynthLib2Tester to check grammar..."
  SynthLib2Tester $SOLVEROUT-out.tmp $SYGUSBENCHNAME > temp-check-syntax.tmp

  #cat temp-check-syntax.txt | grep result

  # If it adheres to grammar (is this right?)
  if grep -q adheres=true temp-check-syntax.tmp;
  then
    #echo "[debug] Run SMT solver to check semantic correctness..."
    ulimit -t $SEMANTIC_CHECK_TIMEOUT;$SEMANTIC_SOLVER $SEMANTIC_SOLVER_OPTS __sygus_grmrchecker_output.smt >& temp-check-semantic.tmp
    # grep for unsat/sat here
    if grep -q unsat temp-check-semantic.tmp;
    then
      echo -n "FAIL-SEMANTIC-UNSAT"
    elif grep -q sat temp-check-semantic.tmp;
    then
      echo -n "SUCCESS"
      SIZE=$(get_expr_size $SOLVEROUT-out.tmp)
    else
      echo -n "FAIL-SEMANTIC"
    fi
    rm temp-check-semantic.tmp
  else
    echo -n "FAIL-SYNTAX"
    #echo "FAIL SYNTAX:"
    #cat temp-check-syntax.tmp
  fi
  #rm temp-check-syntax.tmp
else
    echo -n "UNSOLVED"
fi

# extract time
TIME=$(get_starexec_time $SOLVEROUT)
echo -n ",$TIME"

echo -n ",$SIZE"

echo

rm -f $SOLVEROUT-out.tmp

#echo "[debug] Finished"
